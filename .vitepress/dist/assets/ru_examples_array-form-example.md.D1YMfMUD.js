var m=Object.defineProperty;var u=(n,i,s)=>i in n?m(n,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[i]=s;var d=(n,i,s)=>u(n,typeof i!="symbol"?i+"":i,s);import{c as C,j as l,r as A,F as p,a as E,b as f}from"./chunks/styles.BAyKnI2L.js";import{z as c}from"./chunks/index.DXqQCM1T.js";import{A as B,u as x,I as y,F as v,a as D}from"./chunks/input.DkJVty3J.js";import{p as b,v as _,c as S,ae as w,j,o as V}from"./chunks/framework.DZiWE35w.js";class P extends B{constructor(s=[],a={}){super(a);d(this,"controls",[]);this.controls=s,this.setChildren()}get children(){return this.controls}get size(){return this.controls.length}get value(){return this.controls.map(s=>s.value)}setValue(s){this.controls.forEach((a,t)=>a.setValue(s[t]))}reset(){this.controls=[],this.emitter.emit({type:"reset"}),this.emitter.emit({type:"controls-list-updated",payload:[]})}addControl(s){this.addChild(s),this.controls.push(s),this.emitter.emit({type:"control-added",payload:s}),this.emitter.emit({type:"controls-list-updated",payload:this.controls})}removeControl(s){const a=this.controls.findIndex(t=>t===s);a!==-1&&(this.controls.splice(a,1),this.emitter.emit({type:"control-removed",payload:s}),this.emitter.emit({type:"controls-list-updated",payload:this.controls}))}removeAt(s){const[a]=this.controls.splice(s,1);a&&(this.emitter.emit({type:"control-removed",payload:a}),this.emitter.emit({type:"controls-list-updated",payload:this.controls}))}async validate(){this.setValidating(!0),this.emitter.emit({type:"validation-started"});const s=this.validateValue(this.value),a=new Array(this.size);let t=!0;const e=this.controls.map(async(g,F)=>{const o=await g.validate();o.success===!1&&(t=!1),a[F]=o}),[h]=await Promise.all([s,...e]);h.success?this.clearErrors():this.setErrors(h.errors),this.setValidating(!1);const r={success:h.success&&t,errors:h.errors,controlsErrors:a};return this.emitter.emit({type:"validation-finished",payload:r}),r}getSnapshot(){return{...super.getSnapshot(),controls:[...this.controls]}}}function z(){return new D({name:new p("name",{validators:[c.string().max(5)]}),array:new P([new p("0")])})}const G=()=>{const{api:n,fields:i,instance:s}=x(z),a=A.useCallback(()=>{const t=i.array.size.toString();i.array.addControl(new p(t,{validators:c.string().min(3)}))},[i.array]);return l.jsxs("form",{onSubmit:n.onSubmit,className:"example-form",children:[l.jsx(E,{control:i.name,children:t=>l.jsx(y,{data:t})}),l.jsx("button",{type:"button",onClick:a,children:"ADD CONTROL"}),l.jsx("hr",{}),l.jsx(f,{control:i.array,children:({controls:t})=>t.map((e,h)=>l.jsx(E,{control:e,children:k=>l.jsx(y,{data:k})},h))}),l.jsx(v,{form:s})]})};function T(n){C(n).render(l.jsx(G,{}))}const L=JSON.parse('{"title":"Форма с массивом полей","description":"","frontmatter":{},"headers":[],"relativePath":"ru/examples/array-form-example.md","filePath":"ru/examples/array-form-example.md"}'),N={name:"ru/examples/array-form-example.md"},M=Object.assign(N,{setup(n){const i=b();return _(()=>T(i.value)),(s,a)=>(V(),S("div",null,[a[0]||(a[0]=w(`<h1 id="форма-с-массивом-полеи" tabindex="-1">Форма с массивом полей <a class="header-anchor" href="#форма-с-массивом-полеи" aria-label="Permalink to &quot;Форма с массивом полей&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">Обратите внимание</p><p>Порядок создания и использования форм был подробно разобран в примере с <a href="./base-form-example.html">Базовой формой</a></p></div><ol><li>Создадим форму с двумя полями <code>name: FormControl</code>, <code>array: FormArray</code></li></ol><p>В <code>array</code> сразу же добавим один <code>FormControl</code> со значением по умолчанию <code>0</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createArrayForm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { validators: [z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] }),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      array: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li>Используем форму в <code>React</code></li></ol><p>Для отображения <code>array</code> используем компонент <code>FormArrayField</code>. Массив контролов можно получить в поле <code>controls</code></p><div class="warning custom-block"><p class="custom-block-title">Обратите внимание</p><p><code>FormArray</code> состоит из <code>FormControl</code>, поэтому для отображения <strong>каждого из дочерних полей</strong> необходимо использовать <code>FormControlField</code></p></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormArrayExample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useFormGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(createArrayForm);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onSubmit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{api.onSubmit}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormControlField</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{fields.name}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()} /&gt;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormControlField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormArrayField</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{fields.array}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> controls.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">inx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormControlField</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{inx} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">control</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{control}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()} /&gt;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormControlField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ))}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FormArrayField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><ol start="3"><li>Добавление нового поля в массив.</li></ol><p>Чтобы добавить в <code>FormArray</code> новый контрол, используется метод <code>addControl(control)</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useFormGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(createArrayForm);</span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> onAddControl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fields.array.size.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fields.array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, { validators: z.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) }),</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, [fields.array]);</span></span></code></pre></div><h2 id="результат" tabindex="-1">Результат <a class="header-anchor" href="#результат" aria-label="Permalink to &quot;Результат&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Styling</p><p>Добавим CSS и вывод информации о состоянии контролов и формы на экран. Получаем итоговую форму.</p></div>`,14)),j("div",{ref_key:"el",ref:i},null,512)]))}});export{L as __pageData,M as default};
